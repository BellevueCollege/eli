@page "{id}"
@model ELI.Pages.StudentDetailModel
@{
    Layout = "_Simple";
    ViewData["Title"] = "StudentDetail";
}

<div class="modal-content">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
    </div>
    <div class="modal-body">
        <div class="container">
            <div class="row align-items-end">
                <div class="col-md-8">
                    <ul class="list-unstyled">
                        <li><p class="h3">@Model.Student.Sid</p></li>
                        <li><h1 class="text-uppercase">@Model.Student.LastName, @Model.Student.FirstName <span class="badge badge-secondary text-lowercase">@Model.Student.StuType</span></h1></li>
                        <li>@Model.Student.Gender, born @String.Format("{0:MMMM d, yyyy}", @Model.Student.Dob.Date), from @Model.Student.Country</li>
                    </ul>
                </div>
                <div class="col-md-4">
                    <ul class="list-unstyled text-right">
                        <li><p class="h3">@Model.Student.Group</p></li>
                        <li>Projected quarter: <strong>@Model.Student.YearQuarterEnrolled</strong></li>
                    </ul>
                </div>
            </div>
            <div class="row">
                <div class="col-md-8">
                    <div class="card bg-light mb-3">
                        <h2 class="card-header">Course History</h2>
                        <div class="card-body">
                            <div class="card">
                                <div class="table-responsive">
                                    <table class="table table-hover">
                                        <thead class="thead-light">
                                            <tr>
                                                <th>Year quarter</th>
                                                <th>Item number</th>
                                                <th>Class title</th>
                                                <th>Instructor</th>
                                                <th>Grade</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var c in Model.StudentClassDetails)
                                            {
                                                <tr>
                                                    <td>@c.YearQuarterID</td>
                                                    <td>@c.ItemNumber</td>
                                                    <td>@c.CourseTitle</td>
                                                    <td>@c.InstructorName</td>
                                                    <td>@c.GradeID</td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="card bg-light mb-3">
                        <h2 class="card-header">Visa</h2>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">Type: @Model.Student.VisaStatus</li>
                        </ul>
                    </div>
                    <div class="card bg-light mb-3">
                        <h2 class="card-header">Assessment scores</h2>
                        <ul class="list-group list-group-flush">
                            <li class="list-group-item">Writing Score: @(Model.Student.StuType == "New" && @Model.Student.Score.WriteScore != null ? @Model.Student.Score.WriteScore.ToString(): "0")</li>
                            <li class="list-group-item">Writing Placement: @(Model.Student.StuType == "New" && @Model.Student.Score.WritePlacement != null ? @Model.Student.Score.WritePlacement.ToString() : "0")</li>
                            <li class="list-group-item">EPT/Reading Score: @(Model.Student.StuType == "New" && @Model.Student.Score.EptScore != null ? @Model.Student.Score.EptScore.ToString() : "0")</li>
                            <li class="list-group-item">EPT/Reading Placement: @(Model.Student.StuType == "New" && @Model.Student.Score.EptPlacement != null ? @Model.Student.Score.EptPlacement.ToString() : "0")</li>
                            <li class="list-group-item">Speaking Score: @(Model.Student.StuType == "New" && @Model.Student.Score.OralScore != null ? @Model.Student.Score.OralScore.ToString() : "0")</li>
                            <li class="list-group-item">Speaking Placement: @(Model.Student.StuType == "New" && @Model.Student.Score.OralPlacement != null ? @Model.Student.Score.OralPlacement.ToString() : "0")</li>
                        </ul>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
