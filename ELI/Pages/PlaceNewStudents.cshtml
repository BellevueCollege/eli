@page "{handler?}"
@model ELI.Pages.PlaceNewStudentsModel
@{
    ViewData["Title"] = "Place New Students";
}
@*data list contains numerical representations used for Writing and Oral scores  *@
<datalist id="scores">
    <option value="1-">1-</option>
    <option value="1">1</option>
    <option value="1+">1+</option>
    <option value="2-">2-</option>
    <option value="2">2</option>
    <option value="2+">2+</option>
    <option value="3-">3-</option>
    <option value="3">3</option>
    <option value="3+">3+</option>
    <option value="4-">4-</option>
    <option value="4">4</option>
    <option value="4+">4+</option>
    <option value="5-">5-</option>
    <option value="5">5</option>
    <option value="5+">5+</option>
</datalist>
<div class="row">
    <div class="col-md-12 d-flex justify-content-between">
        <h2>Place New Students</h2>
        @*Action button functionality- sits outside table*@
        <div class="dropdown mb-3">
            <button class="btn btn-secondary dropdown-toggle" type="button" id="actionsDropdownMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                Actions
            </button>
            <div class="dropdown-menu dropdown-menu-right" aria-labelledby="actionsDropdownMenu">
                <a class="dropdown-item" asp-page="/StudentSearch">View All Students</a>
                <a class="dropdown-item active" asp-page="/PlaceNewStudents">Place New Students</a>
                <a class="dropdown-item" asp-page="/PlaceReturningStudents/Index">Place Returning Students</a>
            </div>
        </div>
    </div>
</div>
@*Start of entire table for page*@
<div class="row">
    <div class="col-md-12">
        <form method="post">
            <div class="table-responsive">
                <table class="table table-hover studentsearch">
                    <thead>
                        <tr>
                            @*Table headers information: contains routes and models for the sort functionality *@
                            <th>
                                <a asp-page="/PlaceNewStudents" asp-all-route-data="@Model.QueryParams" asp-route-sortType="@Model.SidSort">SID <i class="fas fa-sort-numeric-@Model.SortDirSid" aria-hidden="true"></i> <span class="sr-only">Sort by SID</span></a> <input type="text" asp-for="@Model.SidSearch" class="form-control" placeholder="Filter by SID" />
                            </th>
                            <th><a asp-page="/PlaceNewStudents" asp-all-route-data="@Model.QueryParams" asp-route-sortType="@Model.LnameSort">Last name <i class="fas fa-sort-alpha-@Model.SortDirLname" aria-hidden="true"></i> <span class="sr-only">Sort by Last Name</span></a> <input type="text" asp-for="@Model.LnameSearch" class="form-control" placeholder="Filter by last name" /></th>
                            <th><a asp-page="/PlaceNewStudents" asp-all-route-data="@Model.QueryParams" asp-route-sortType="@Model.FnameSort">First name <i class="fas fa-sort-alpha-@Model.SortDirFname" aria-hidden="true"></i> <span class="sr-only">Sort by First Name</span></a> <input type="text" asp-for="@Model.FnameSearch" class="form-control" placeholder="Filter by first name" /></th>
                            <th>EPT</th>
                            <th>Writing</th>
                            <th>Oral</th>
                            <th class="d-flex flex-column">
                                @*Apply/Clear filters & save scores button functionality *@
                                <div class="btn-group-vertical" role="group" aria-label="Button group to apply, clear filters, and save student scores">
                                    <div class="btn-group" role="group">
                                        <input class="btn btn-primary" type="submit" value="Apply Filters" asp-all-route-data="@Model.QueryParams" asp-route-sortType="@Model.CurrentSortType" asp-page-handler="ApplyFilters" />
                                        <button type="button" class="btn btn-dark dropdown-toggle dropdown-toggle-split" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                                            <span class="sr-only">Toggle Dropdown</span>
                                        </button>
                                        <div class="dropdown-menu">
                                            <a class="dropdown-item" asp-page="/PlaceNewStudents">Clear filters</a>
                                        </div>
                                    </div>
                                    <button type="submit" class="btn btn-success" asp-all-route-data="@Model.QueryParams" asp-page-handler="SaveScores">
                                        <i class="fas fa-save pr-1" aria-hidden="true"></i> Save scores
                                    </button>
                                </div>
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @*Retriving students to form list*@
                        @for (int i = 0; i < Model.Students.Count; i++)
                        {
                            <tr>

                                <td><a asp-page="/StudentDetail" asp-route-id="@Model.Students[i].Sid" class="modal-link" data-toggle="modal" data-target="#studDialog">@Model.Students[i].Sid</a></td>
                                <td>@Model.Students[i].LastName</td>
                                <td>@Model.Students[i].FirstName</td>
                                <td>
                                    @* Ept score form group*@
                                    <div class="form-group">
                                        <input type="hidden" asp-for="@Model.Students[i].Sid" />
                                        <label asp-for="@Model.Students[i].Score.EptScore">Score</label>
                                        <input type="number" data-internalid="@i" asp-for="@Model.Students[i].Score.EptScore" class="form-control limited-width" aria-describedby="helpBlock1" />
                                        <span id="helpBlock1" asp-validation-for="@Model.Students[i].Score.EptScore" class="help-block"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="@Model.Students[i].Score.EptPlacement">Place</label>
                                        <input type="text" asp-for="@Model.Students[i].Score.EptPlacement" class="form-control limited-width" aria-describedby="helpBlock2" />
                                        <span id="helpBlock2" asp-validation-for="@Model.Students[i].Score.EptPlacement" class="help-block"></span>
                                    </div>
                                </td>                                  
                                <td>
                                    @* Write score form group *@
                                    <div class="form-group">
                                        <label asp-for="@Model.Students[i].Score.WriteScore">Score</label>
                                        <input list="scores" data-internalid="@i" asp-for="@Model.Students[i].Score.WriteScore" class="form-control limited-width" aria-describedby="helpBlock3" />
                                        <span id="helpBlock3" asp-validation-for="@Model.Students[i].Score.WriteScore" class="help-block"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="@Model.Students[i].Score.WritePlacement">Place</label>
                                        <input type="text" asp-for="@Model.Students[i].Score.WritePlacement" class="form-control limited-width" aria-describedby="helpBlock4" />
                                        <span id="helpBlock4" asp-validation-for="@Model.Students[i].Score.WritePlacement" class="help-block"></span>
                                    </div>
                                </td>
                                <td>
                                    @* Oral score form group *@
                                    <div class="form-group">
                                        <label asp-for="@Model.Students[i].Score.OralScore">Score</label>
                                        <input list="scores" data-internalid="@i" asp-for="@Model.Students[i].Score.OralScore" class="form-control limited-width" aria-describedby="helpBlock5" />
                                        <span id="helpBlock5" asp-validation-for="@Model.Students[i].Score.OralScore" class="help-block"></span>
                                    </div>
                                    <div class="form-group">
                                        <label asp-for="@Model.Students[i].Score.OralPlacement">Place</label>
                                        <input type="text" asp-for="@Model.Students[i].Score.OralPlacement" class="form-control limited-width" aria-describedby="helpBlock6" />
                                        <span id="helpBlock6" asp-validation-for="@Model.Students[i].Score.OralPlacement" class="help-block"></span>
                                    </div>
                                </td>
                                <td>
                                    <a asp-page="/StudentDetail" asp-route-id="@Model.Students[i].Sid" class="modal-link" data-toggle="modal" data-target="#studDialog"><i class="fas fa-external-link-alt"></i> @Model.Students[i].FirstName's Profile</a>
                                </td>
                            </tr>
                        }
                    </tbody>
                    <tfoot>
                        <tr>
                            <th colspan="7">
                                <div class="d-flex flex-row-reverse">
                                    <button type="submit" class="btn btn-success" asp-all-route-data="@Model.QueryParams" asp-page-handler="SaveScores">
                                        <i class="fas fa-save" aria-hidden="true"></i> Save scores
                                    </button>
                                </div>
                            </th>
                        </tr>
                    </tfoot>
                </table>
            </div>


        </form>

        <!-- Student info modal -->
        <div class="modal" id="studDialog" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
            <div class="modal-dialog" role="document">
                @*StudentDetail modal-content gets placed here*@
            </div>
        </div>
    </div>
</div>

<script src="https://ajax.aspnetcdn.com/ajax/jQuery/jquery-2.2.0.min.js"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jquery.validate/1.16.0/jquery.validate.min.js"></script>
<script src="https://ajax.aspnetcdn.com/ajax/jquery.validation.unobtrusive/3.2.6/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">
    /** JS autofill logic for EptPlacement **/
    $('input[name$="EptScore"]').change(function () {
        let intid = $(this).attr("data-internalid");
        let placement_item = $('input[name="Students[' + intid + '].Score.EptPlacement"]');

        if (!placement_item.val()) {
            //only autofill if placement doesn't yet have a value
            let placement_score = calculateEptPlacement($(this).val());
            placement_item.val(placement_score);
        }
    });

    /** JS autofill logic for WritePlacement **/
    $('input[name$="WriteScore"]').change(function () {
        let intid = $(this).attr("data-internalid");
        let placement_item = $('input[name="Students[' + intid + '].Score.WritePlacement"]');

        if (!placement_item.val()) {
            //only autofill if placement doesn't yet have a value
            let eptscore_item = $('input[name="Students[' + intid + '].Score.EptScore"]');
            let placement_score = calculateEptPlacement(eptscore_item.val());
            placement_item.val(placement_score);
        }
    });

    /** JS autofill logic for OralPlacement **/
    $('input[name$="OralScore"]').change(function () {
        let intid = $(this).attr("data-internalid");
        let placement_item = $('input[name="Students[' + intid + '].Score.OralPlacement"]');

        if (!placement_item.val()) {
            //only autofill if placement doesn't yet have a value
            let placement_score = calculateOralPlacement($(this).val());
            placement_item.val(placement_score);
        }
    });

    /**
     * Calculate EptPlacement based on a score
     */
    function calculateEptPlacement(score) {
        if (score) {
            if (score >= 0 && score <= 29) {
                return 1;
            }
            else if (score >= 30 && score <= 47) {
                return 2;
            }
            else if (score >= 48 && score <= 65) {
                return 3;
            }
            else if (score >= 66 && score <= 76) {
                return 4;
            }
            else if (score >= 77) {
                return 5;
            }
        }
        return null;
    }

    /**
     * Calculate OralPlacement based on a score
     */
    function calculateOralPlacement(score) {
        if (score) {
            return score.substring(0, 1);
        }
        return null;
    }

    $(function () {

        /*** Bootstrap 4 Modal for Student Details ***/
        $('#studDialog').on('show.bs.modal', function (event) {
            var link = $(event.relatedTarget);
            var openpage = link.attr("href");

            $("#studDialog .modal-dialog").load(openpage + " .modal-content", function (response, status, xhr) {
                if (status == "error") {
                    $('#studDialog').modal('hide');
                    alert("Error: Unable to retrieve student data.\n" + "Error code " + xhr.status + "\n" + xhr.statusText);
                }
            });
        });

        // empty modal on close so that old data isn't shown when modal is reopened
        $('#studDialog').on('hidden.bs.modal', function (event) {
            $('#studDialog').find('.modal-content').remove();
        });
    });
    /*Only get student scores for filtered students  */
    
</script>